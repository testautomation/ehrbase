name: Java CI

on:
  push:

  pull_request:
    branches:
    - master
    - develop

jobs:
  build:
    name: BUILD EHRBASE .jar
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Code
      uses: actions/checkout@v2


    - name: CACHE MAVEN DEPENDENCIES
      uses: actions/cache@v1
      id: cache-maven
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-


    - name: SET UP JAVA JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11


    - name: START POSTGRESQL DB
      run: |
        docker run --name ehrdb -e POSTGRES_USER=postgres \
                                -e POSTGRES_PASSWORD=postgres \
                                -d -p 5432:5432 ehrbaseorg/ehrbase-database-docker:11.5

    - name: BUILD EHRBASE SERVER WITH MAVEN
      run: mvn package


    - name: CACHE EHRBASE .jar ARTEFACT
      uses: actions/cache@v1
      id: cache-jar
      with:
        path: application/target
        key: ${{ runner.os }}-jar-
        restore-keys: |
          ${{ runner.os }}-jar-



  test:
    name: TEST EHRBASE SERVICES
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        python-version: [3.8]

    steps:

    - name: CHECKOUT CODE
      uses: actions/checkout@v2


    - name: RESTORE CACHE EHRBASE .jar
      uses: actions/cache@v1
      id: cache-jar
      with:
        path: application/target
        key: ${{ runner.os }}-jar-
        restore-keys: |
          ${{ runner.os }}-jar-


    - name: SET UP PYTHON ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v1


    - name: CACHE PIP (PYTHON DEPENDENCIES)
      uses: actions/cache@v1
      id: cache-python
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-


    - name: INSTALL TEST DEPENDENCIES
      run: |
        python -m pip install --upgrade pip
        cd tests/
        pip install -r requirements.txt
    

    - name: RUN ROBOT TESTS
      run: |
        cd tests/
        robot -e future -e circleci -e TODO -e obsolete -e libtest -d results -L TRACE --noncritical not-ready --name "QUERY empty_db"  -i empty_db  robot/QUERY_SERVICE_TESTS
        while [ ! -e ./results/output.xml ] && echo "files not ready!"; do sleep 1; done


    - name: UPLOAD TEST RESULTS
      uses: actions/upload-artifact@v2-preview
      if: always()
      with:
        name: robot_results
        path: tests/results/*

    





# oooooooooo.        .o.         .oooooo.   oooo    oooo ooooo     ooo ooooooooo.
# `888'   `Y8b      .888.       d8P'  `Y8b  `888   .8P'  `888'     `8' `888   `Y88.
#  888     888     .8"888.     888           888  d8'     888       8   888   .d88'
#  888oooo888'    .8' `888.    888           88888[       888       8   888ooo88P'
#  888    `88b   .88ooo8888.   888           888`88b.     888       8   888
#  888    .88P  .8'     `888.  `88b    ooo   888  `88b.   `88.    .8'   888
# o888bood8P'  o88o     o8888o  `Y8bood8P'  o888o  o888o    `YbodP'    o888o
#
# [ BACKUP ]

    # steps:

    ###########################################################
    #                                                         #
    #   NOTE: Use this step for live debugging on CI runner   #
    #                                                         #
    ###########################################################
    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v1


    # - name: START POSTGRESQL DB
    #   run: |
    #     docker run --name ehrdb -e POSTGRES_USER=postgres \
    #                             -e POSTGRES_PASSWORD=postgres \
    #                             -d -p 5432:5432 ehrbaseorg/ehrbase-database-docker:11.5

    # - name: RESTORE CACHE EHRBASE .jar
    #   uses: actions/cache@v1
    #   id: cache-jar
    #   with:
    #     path: application/target
    #     key: ${{ runner.os }}-jar-
    #     restore-keys: |
    #       ${{ runner.os }}-jar-
    
    # - name: START EHRBASE SERVER
    #   run: |
    #     ls -la
    #     java -jar application/target/application-0.11.0.jar --cache.enabled=false > log &
    #     sleep 20
    #     echo "READY FOR TEST"

    ## NOTE: download is slower than cache | use cache!
    # - name: Download EHRbase .jar
    #   uses: actions/download-artifact@v1
    #   with:
    #     name: application-0.9.0.jar
    #     path: application/target